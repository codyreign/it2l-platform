<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!-- Enables controllers mapped with @RequestMapping annotations, formatting annotations @NumberFormat @DateTimeFormat, and JSR 303 style validation -->
	<mvc:annotation-driven/>

	<mvc:resources mapping="/resources/**" location="/, classpath:/META-INF/web-resources/" />
	<mvc:default-servlet-handler />
    
	<!-- Maps request paths to flows in the flowRegistry; e.g. a path of /hotels/booking looks for a flow with id "hotels/booking". -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="order" value="-1"/>
		<property name="flowRegistry" ref="flowRegistry" />
	</bean>

	<!-- Map paths directly to view names without controller processing. Use the view-name attribute if necessary: by convention the view name equals the path without the leading slash -->
	<mvc:view-controller path="/" view-name="intro" />
	<mvc:view-controller path="/login" />
	<mvc:view-controller path="/logoutSuccess" />
	<mvc:view-controller path="/audioRecorder"/>
	<mvc:view-controller path="/audioRecorderFlash"/>

	<!-- Dispatches requests mapped to flows to FlowHandler implementations -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor"/>
		<property name="saveOutputToFlashScopeOnRedirect" value="true"/>
	</bean>

	<!-- Thymeleaf template resolver -->
	<bean id="templateResolver"
		  class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/" />
		<property name="templateMode" value="HTML5" />
	</bean>

	<!-- Thymeleaf Template Engine -->
    <bean id="templateEngine"
          class="org.thymeleaf.spring3.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
        <property name="additionalDialects">
            <set>
                <bean class="org.thymeleaf.extras.tiles2.dialect.TilesDialect"/>
                <bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect"/>
                <bean class="org.thymeleaf.extras.conditionalcomments.dialect.ConditionalCommentsDialect"/>
            </set>
        </property>
    </bean>

	<!-- Resolves logical view names returned by Controllers to Tiles; a view name to resolve is treated as the name of a tiles definition -->
	<bean id="tilesViewResolver" class="org.thymeleaf.spring3.view.AjaxThymeleafViewResolver">
		<property name="viewClass" value="org.thymeleaf.extras.tiles2.spring.web.view.FlowAjaxThymeleafTilesView"/>
		<property name="templateEngine" ref="templateEngine"/>
	</bean>
  
	<!-- Configures the Tiles layout system using a specific thymeleaf-enabled Tiles Configurer -->
	<bean id="tilesConfigurer" class="org.thymeleaf.extras.tiles2.spring.web.configurer.ThymeleafTilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/**/views.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    	<property name="prefixJson" value="false" />
    	<property name="supportedMediaTypes" value="application/json" />
	</bean>
	
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	    <property name="mediaTypes">
	        <map>
	        	<entry key="html" value="text/html"/> 
	            <entry key="json" value="application/json" />
	        </map>
	    </property>
	
	    <property name="defaultViews">
	        <list>
	            <bean
	                class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
	                <property name="objectMapper">
	                    <ref bean="JacksonObjectMapper" />
	                </property>
	            </bean>
	        </list>
	    </property>
	    <property name="favorPathExtension" value="false" />
	    <property name="favorParameter" value="true" />
	    <property name="useNotAcceptableStatusCode" value="true" />
	</bean>

	<bean id="JacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	
</beans>
